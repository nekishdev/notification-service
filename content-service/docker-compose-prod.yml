version: '3'
services:
  film-admin:
    container_name: ${COMPOSE_PROJECT_NAME}__film__prod_admin
    build: admin
    env_file: admin/config/.env
    environment:
      DB_HOST: "film-postgres"
      UWSGI_PORT: ${APP_CONTAINER_PORT}
      UWSGI_PROCESSES: 1
      UWSGI_THREADS: 16
      UWSGI_HARAKIRI: 240
    entrypoint: ["/opt/run_uwsgi.sh"]
    restart: always
    volumes:
      - film-app-static:/opt/app/static
      - film-app-media:/opt/app/media
    expose:
      - "${APP_CONTAINER_PORT}"
    depends_on:
      - film-postgres
    networks:
      - backend

  film-nginx:
    container_name: ${COMPOSE_PROJECT_NAME}__prod_nginx
    build: ./nginx
    volumes:
      - ${NGINX_CONF_PATH}:/etc/nginx/nginx.conf:ro
      - ${NGINX_SITES_PATH}:/etc/nginx/conf.d:ro
      - film-app-static:/data/static:ro
      - film-app-media:/data/media:ro
    depends_on:
      - film-admin
      - film-api
    ports:
      - "${NGINX_ADMIN_LOCAL_PORT}:${NGINX_ADMIN_CONTAINER_PORT}"
      - "${NGINX_FASTAPI_LOCAL_PORT}:${NGINX_FASTAPI_CONTAINER_PORT}"
    networks:
      - backend

  film-api:
    container_name: ${COMPOSE_PROJECT_NAME}__prod_api
    build:
      context: api
      dockerfile: Dockerfile
      args:
        - EXPOSE_PORT=${FASTAPI_CONTAINER_PORT}
    env_file:
      - api/.env
    environment:
      FASTAPI_HOST: "${FASTAPI_HOST}"
      FASTAPI_PORT: "${FASTAPI_CONTAINER_PORT}"

      ELASTIC_HOST: "elasticsearch"
      ELASTIC_PORT: "${ELASTIC_CONTAINER_PORT}"

      REDIS_HOST: "redis"
      REDIS_PORT: "${REDIS_CONTAINER_PORT}"
    command: "uvicorn main:app --host ${FASTAPI_HOST} --port ${FASTAPI_CONTAINER_PORT}"
    depends_on:
      - film-elasticsearch
      - film-redis
    networks:
      - backend

  film-postgres:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}__prod_postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: ${DB_PG_CONTAINER_DATA}
    restart: always
    ports:
      - "${DB_LOCAL_PORT}:${DB_CONTAINER_PORT}"
    volumes:
      - film-postgres-data:${DB_PG_CONTAINER_DATA}
    networks:
      - backend

  film-elasticsearch:
    build:
      context: ./es
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}__prod_elasticsearch
    environment:
      discovery.type: "single-node"
    restart: always
    volumes:
      - film-esdata:/usr/share/elasticsearch/data
    networks:
      - backend

  film-redis:
    image: redis:6.2-alpine
    container_name: ${COMPOSE_PROJECT_NAME}__prod_redis
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - film-redis-data:/data
    networks:
      - backend

  film-etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}__prod_etl
    env_file:
      - ./etl/.env
    environment:
      PG_WAIT_HOST: "film-postgres"
      PG_WAIT_PORT: "5432"

      ELASTIC_HOST: "film-elasticsearch"
      ELASTIC_PORT: "${ELASTIC_CONTAINER_PORT}"
    restart: always
    depends_on:
      - film-postgres
      - film-elasticsearch
    networks:
      - backend

networks:
  backend:
    name: ${DOCKER_NETWORK_NAME}
    external: true

volumes:
  film-app-static:
    driver: local
  film-app-media:
    driver: local
  film-postgres-data:
    driver: local
  film-esdata:
    driver: local
  film-redis-data:
    driver: local
