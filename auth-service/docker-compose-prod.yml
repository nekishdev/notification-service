version: '3'
services:
  auth-app:
    container_name: ${COMPOSE_PROJECT_NAME}__prod_app
    build:
      context: ./app
      args:
        - EXPOSE_PORT=${APP_CONTAINER_PORT}
    environment:
      PROJECT_NAME: "${APP_PROJECT_NAME}"
      APP_SECRET: "${APP_SECRET}"
      APP_DEBUG: "${APP_DEBUG}"

      APP_HOST: "${APP_HOST}"
      APP_PORT: "${APP_CONTAINER_PORT}"
      WORKERS: 2
      ASYNC_CORES: 2000
      PROTOCOL: "http"

      PG_DSN: "${APP_PG_DSN}"

      REDIS_HOST: "auth-redis"
      REDIS_PORT: "${REDIS_CONTAINER_PORT}"
    entrypoint: ["/opt/run_uwsgi.sh"]
    ports:
      - "${APP_LOCAL_PORT}:${APP_CONTAINER_PORT}"
    depends_on:
      - auth-postgres
      - auth-redis
    networks:
      - backend

  auth-postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}__prod_postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: ${DB_PG_CONTAINER_DATA}
    restart: always
    ports:
      - "${DB_LOCAL_PORT}:${DB_CONTAINER_PORT}"
    volumes:
      - auth-postgres-data:${DB_PG_CONTAINER_DATA}
    networks:
      - backend

  auth-redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}__prod_redis
    restart: always
    ports:
      - "${REDIS_LOCAL_PORT}:${REDIS_CONTAINER_PORT}"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - auth-redis-data:/data
    networks:
      - backend

networks:
  backend:
    name: ${DOCKER_NETWORK_NAME}
    external: true

volumes:
  auth-postgres-data:
    driver: local
  auth-redis-data:
    driver: local
