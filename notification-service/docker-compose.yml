version: '3'
services:

  notification-rabbitmq:
    build:
      context: ./rabbitmq
    container_name: ${COMPOSE_PROJECT_NAME}__dev_rabbitmq
    ports:
      - "${RABBITMQ_MESSAGES_LOCAL_PORT}:${RABBITMQ_MESSAGES_CONTAINER_PORT}"
      - "${RABBITMQ_MANAGER_LOCAL_PORT}:${RABBITMQ_MANAGER_CONTAINER_PORT}"
    volumes:
      - notification-rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq/log:/var/log/rabbitmq
    networks:
      - backend

  notification-api:
    build:
      context: ./api
    container_name: ${COMPOSE_PROJECT_NAME}__dev_api
    env_file:
      - ./api/.env
    environment:
      FASTAPI_HOST: ${API_NOTIFICATION_LISTEN_HOST}
      FASTAPI_PORT: ${API_NOTIFICATION_CONTAINER_PORT}
      RABBITMQ_HOST: "notification-rabbitmq"
      RABBITMQ_PORT: ${RABBITMQ_MESSAGES_CONTAINER_PORT}
      RABBITMQ_USER: "guest"
      RABBITMQ_PASSWORD: "guest"
    command: python app.py
    restart: always
    expose:
      - ${API_NOTIFICATION_CONTAINER_PORT}
    ports:
      - "${API_NOTIFICATION_LOCAL_PORT}:${API_NOTIFICATION_CONTAINER_PORT}"
    volumes:
      - ./api:/app
    networks:
      - backend

  notification-admin:
    build: ./admin
    container_name: ${COMPOSE_PROJECT_NAME}__dev_admin
    volumes:
      - ./admin/src:/src
      - notification-admin-static:/app/static
    ports:
      - "${API_ADMIN_LOCAL_PORT}:${API_ADMIN_CONTAINER_PORT}"
    env_file:
      - ./admin/.env
    environment:
      APP_PORT: ${API_ADMIN_CONTAINER_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: "notification-db"
      DB_PORT: ${POSTGRES_CONTAINER_PORT}
    depends_on:
      - notification-db
    networks:
      - backend

  notification-db:
    build: ./db
    container_name: ${COMPOSE_PROJECT_NAME}__dev_db
    volumes:
      - notification-postgres-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - ${POSTGRES_CONTAINER_PORT}
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_CONTAINER_PORT}"
    networks:
      - backend

  notification-scheduler:
    build: ./admin
    container_name: ${COMPOSE_PROJECT_NAME}__dev_scheduler
    env_file:
      - ./admin/.env
    environment:
      NOTIFICATION_API_BASE_URL: "notification-api:${API_NOTIFICATION_CONTAINER_PORT}"
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: "notification-db"
      DB_PORT: ${POSTGRES_CONTAINER_PORT}
    command: python manage.py schedule
    volumes:
      - ./admin/src:/src
    networks:
      - backend

  notification-consumer:
    build:
      context: ./consumer
    container_name: ${COMPOSE_PROJECT_NAME}__dev_consumer
    env_file:
      - ./consumer/.env
    environment:
      RABBITMQ_HOST: "notification-rabbitmq"
      RABBITMQ_PORT: ${RABBITMQ_MESSAGES_CONTAINER_PORT}
      RABBITMQ_USER: "guest"
      RABBITMQ_PASSWORD: "guest"

      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: "notification-db"
      DB_PORT: ${POSTGRES_CONTAINER_PORT}
    command: python app_async.py
    volumes:
      - ./consumer/src:/src
    networks:
      - backend
    depends_on:
      - notification-rabbitmq

networks:
  backend:
    name: ${DOCKER_NETWORK_NAME}
    external: true


volumes:
  notification-rabbitmq-data:
    driver: local
  notification-postgres-data:
    driver: local
  notification-admin-static:
    driver: local
